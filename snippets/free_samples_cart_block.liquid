{% comment %}
  Free Gifts Images - Snippet
{% endcomment %}

{% assign freeSampleCollectionHandle = 'free-samples' %}

{% style %}
  .free-gift-product-img {
    pointer-events: none;
  }

  .free-gift-product-img-container {
    position: relative;
  }

  .add-to-cart-button {
    z-index: 1;
    pointer-events: auto;
  }

  .add-to-cart-button.disabled {
    pointer-events: none;
    opacity: 0.7;
  }

  .free-gift-column {
    position: relative;
  }

  .loading-spinner {
    position: absolute;
    bottom: 38px;
    left: 50%;
    margin-left: -12px;
    width: 24px;
    height: 24px;
    border-radius: 50%;
    border: 3px solid #000;
    border-top: 3px solid transparent;
    animation: spin 1s linear infinite;
    z-index: 100;
    display: none;
  }

  .page-overlay {
    position: fixed;
    top: 0;
    left: 0;
    width: 100%;
    height: 100%;
    background: rgba(255, 255, 255, 0.8); /* Semi-transparent background */
    z-index: 99; /* Lower z-index than loading spinner */
    display: none; /* Initially hidden */
    pointer-events: auto; /* Enable pointer events */
}

  .add-to-cart-button.invisible {
    color: transparent;
  }

  .add-to-cart-button:hover {
    background-color: #ddd;
  }

  @keyframes spin {
    0% { transform: rotate(0deg); }
    100% { transform: rotate(360deg); }
  }
{% endstyle %}



<div class="free-gift-images-container">
  {% assign cart_items = cart.items %}
  {% for product in collections[freeSampleCollectionHandle].products %}
    {% assign product_in_cart = false %}
    {% for item in cart_items %}
      {% if item.product_id == product.id %}
        {% assign product_in_cart = true %}
        {% break %}
      {% endif %}
    {% endfor %}
    <div class="free-gift-column">
      <div class="free-gift-products">
        <button class="free-gift-product-img-container {% if product_in_cart %}selected{% endif %}" data-product-id="{{ product.variants.first.id }}">
          <div class="img-only-container-free-gifts">
            <img class="free-gift-product-img product__thumbnail line-item__image" data-srcset-80="{{ product.featured_image.src | img_url: '80x80', 'jpg' }}"
              data-srcset-92="{{ product.featured_image.src | img_url: '92x92', 'jpg' }}"
              data-srcset-160="{{ product.featured_image.src | img_url: '160x160', 'jpg' }}"
              data-srcset-184="{{ product.featured_image.src | img_url: '184x184', 'jpg' }}"
              data-srcset-240="{{ product.featured_image.src | img_url: '240x240', 'jpg' }}"
              data-srcset-276="{{ product.featured_image.src | img_url: '276x276', 'jpg' }}"
              src="{{ product.featured_image.src | img_url: '552x', 'jpg' }}" alt="{{ product.title }}" loading="lazy" width="552">
          </div>
          <div class="content-box-free-gifts">
            <p>{{ product.title }} <br>
              {{ product.description }}<br><br>{{ "general.free_gifts.free" | t }}</p>
            <div class="loading-spinner"></div>
            <span class="add-to-cart-button">
              {% if product_in_cart %}
                {{ "general.free_gifts.remove" | t }}
              {% else %}
                {{ "general.free_gifts.add" | t }}
              {% endif %}
            </span>
          </div>
        </button>
      </div>
    </div>
  {% endfor %}
</div>

<script>
document.addEventListener('DOMContentLoaded', function () {
  const freeGiftButtons = document.querySelectorAll('.free-gift-product-img-container');
  let isOperationInProgress = false;
  const operationDelay = 1000;
  const pageOverlay = document.querySelector('.page-overlay');

  function updateGrayOut() {
    const selectedProducts = document.querySelectorAll('.free-gift-product-img-container.selected');
    if (selectedProducts.length >= 1) {
      freeGiftButtons.forEach(button => {
        if (!button.classList.contains('selected')) {
          button.classList.add('grayed-out');
          button.querySelector('.add-to-cart-button').classList.add('grayed-out');
          button.style.pointerEvents = 'none';
        }
      });
    } else {
      freeGiftButtons.forEach(button => {
        button.classList.remove('grayed-out');
        button.querySelector('.add-to-cart-button').classList.remove('grayed-out');
        button.style.pointerEvents = 'auto';
      });
    }
  }

  function handleAddToCart(productId, button, addToCartButton, loadingSpinner) {
    addToCart(productId)
      .then(() => {
        button.classList.add('selected');
        addToCartButton.textContent = '{{ "general.free_gifts.remove" | t }}';
        updateGrayOut();
        location.reload(); // Reload the page after adding the item to the cart
      })
      .catch(error => {
        console.error('Error adding product to cart:', error);
      })
      .finally(() => {
        button.classList.remove('disabled');
        loadingSpinner.style.display = 'none';
        addToCartButton.classList.remove('invisible');
        isOperationInProgress = false;
        toggleOverlay(false);
      });
  }

  function handleRemoveFromCart(productId, button, addToCartButton, loadingSpinner) {
    removeFromCart(productId)
      .then(() => {
        button.classList.remove('selected');
        addToCartButton.textContent = '{{ "general.free_gifts.add" | t }}';
        updateGrayOut();
        location.reload(); // Reload the page after removing the item from the cart
      })
      .catch(error => {
        console.error('Error removing product from cart:', error);
      })
      .finally(() => {
        button.classList.remove('disabled');
        loadingSpinner.style.display = 'none';
        addToCartButton.classList.remove('invisible');
        isOperationInProgress = false;
        toggleOverlay(false);
      });
  }

  freeGiftButtons.forEach(button => {
    const loadingSpinner = button.querySelector('.loading-spinner');
    const addToCartButton = button.querySelector('.add-to-cart-button');
    const productId = button.getAttribute('data-product-id');

    addToCartButton.addEventListener('click', function (event) {
      event.stopPropagation();

      if (isOperationInProgress) {
        return;
      }

      isOperationInProgress = true;
      toggleOverlay(true);
      button.classList.add('disabled');
      loadingSpinner.style.display = 'block';
      addToCartButton.classList.add('invisible');

      if (!button.classList.contains('selected') && document.querySelectorAll('.free-gift-product-img-container.selected').length < 1) {
        handleAddToCart(productId, button, addToCartButton, loadingSpinner);
      } else if (button.classList.contains('selected')) {
        handleRemoveFromCart(productId, button, addToCartButton, loadingSpinner);
      }
    });
  });

  function toggleOverlay(show) {
    if (show) {
      pageOverlay.style.display = 'block';
      document.body.style.overflow = 'hidden';
    } else {
      pageOverlay.style.display = 'none';
      document.body.style.overflow = '';
    }
  }

  function addToCart(productId) {
    return fetch('/cart/add.js', {
      method: 'POST',
      headers: {
        'Content-Type': 'application/json'
      },
      body: JSON.stringify({
        quantity: 1,
        id: productId
      })
    }).then(response => {
      if (!response.ok) {
        throw new Error('Error adding product to cart.');
      }
      return response.json();
    });
  }

  function removeFromCart(productId) {
    return fetch('/cart/update.js', {
      method: 'POST',
      headers: {
        'Content-Type': 'application/json'
      },
      body: JSON.stringify({
        updates: {
          [productId]: 0
        }
      })
    }).then(response => {
      if (!response.ok) {
        throw new Error('Error removing product from cart.');
      }
      return response.json();
    });
  }

  updateGrayOut();
});
</script>
